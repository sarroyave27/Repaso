CREATE DATABASE PERSON COLLATE "UTF8_GENERAL_CI"


CREATE TABLE USERS (
    ID INT(8) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(50)
)

CREATE TABLE CATEGORIAS (
    COD INT(8) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    DESCRIPCION VARCHAR(50),
    ESTADO VARCHAR(50)
)

CREATE TABLE PRODUCTOS (
    COD INT(8) PRIMARY KEY NOT NULL AUTO_INCREMENT,
    DESCRIPCION VARCHAR(50),
    CANTIDAD INT(5),
    TAMAÑO INT(5),
    COD_CATEGORIA INT(8),
    FOTO BLOB,
    FOREIGN KEY(COD_CATEGORIA) REFERENCES categorias(COD)

)

-- Procedimiento almacenados user
CREATE PROCEDURE `spInsertUser`(IN `_NAME` VARCHAR(50)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN   
    INSERT INTO USERS (NAME) VALUES (_NAME);
END;

CREATE PROCEDURE `spFindAllUser`() NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN   
    SELECT ID, NAME FROM USERS; 
END; 

CREATE PROCEDURE `spFindUser`(IN `_ID` INT(8)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT ID, NAME FROM USERS WHERE ID = _ID; 
END;

CREATE PROCEDURE `spUpdateUser`(IN `_ID` INT(8), IN `_NAME` VARCHAR(50)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    UPDATE USERS SET NAME = _NAME WHERE ID = _ID; 
END;

CREATE PROCEDURE `spDeleteUser`(IN `_ID` INT(8)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    DELETE FROM USERS WHERE ID = _ID; 
END;

CALL spInsertUser('Becerra');
CALL spFindAllUser(); 
CALL `spFindUser`(1);
CALL `spUpdateUser`(1, "kewin");

-- Procedimiento almacenados categorias

CREATE PROCEDURE `spInsertCategory`(IN `_DESCRIPCION` VARCHAR(50), IN `_ESTADO` VARCHAR(50)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    INSERT INTO categorias (DESCRIPCION, ESTADO) VALUES (_DESCRIPCION, _ESTADO); 
END;

CREATE PROCEDURE `spFindAllCategory`() NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT COD, DESCRIPCION, ESTADO FROM categorias; 
END;

CREATE PROCEDURE `spFindCategory`(IN `_COD` INT(8)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT COD, DESCRIPCION, ESTADO FROM categorias WHERE COD = _COD; 
END;

CREATE PROCEDURE `spUpdateCategory`(IN `_COD` INT(8), IN `_DESCRIPCION` VARCHAR(50), IN `_ESTADO` VARCHAR(50)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    UPDATE categorias SET DESCRIPCION = _DESCRIPCION, ESTADO = _ESTADO WHERE COD = _COD; 
END;

CREATE PROCEDURE `spDeleteCategory`(IN `_COD` INT(8)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    DELETE FROM categorias WHERE COD = _COD; 
END;


CALL `spInsertCategory`

-- Procedimiento almacenados productos


CREATE PROCEDURE `spInsertProduct`(IN `_DESCRIPCION` VARCHAR(50), IN `_CANTIDAD` INT(5), IN `_TAMAÑO` INT(5), IN `_COD_CATEGORIA` INT(8), IN `FOTO` BLOB) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    INSERT INTO productos (DESCRIPCION, CANTIDAD, TAMAÑO, COD_CATEGORIA, FOTO) VALUES (_DESCRIPCION, _CANTIDAD, _TAMAÑO, _COD_CATEGORIA, _FOTO); 
END;

CREATE PROCEDURE `spFindAllProducts`() NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT COD, DESCRIPCION, CANTIDAD, TAMAÑO, COD_CATEGORIA, FOTO FROM productos; 
END;

CREATE PROCEDURE `spFindProduct`(IN `_COD` INT(8)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    SELECT COD, DESCRIPCION, CANTIDAD, TAMAÑO, COD_CATEGORIA, FOTO FROM productos WHERE COD = _COD; 
END;

CREATE PROCEDURE `spUdpateProduct`(IN `_COD` INT(8), IN `_DESCRIPCION` VARCHAR(50), IN `_CANTIDAD` INT(5), IN `_TAMAÑO` INT(5), IN `_COD_CATEGORIA` INT(8), IN `FOTO` BLOB) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
    BEGIN UPDATE productos SET DESCRIPCION = _DESCRIPCION, CANTIDAD = _CANTIDAD, TAMAÑO = _TAMAÑO, COD_CATEGORIA = _COD_CATEGORIA, FOTO = _FOTO WHERE COD = _COD; 
END;


CREATE PROCEDURE `spDeleteProduct`(IN `_COD` INT(8)) NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER 
BEGIN 
    DELETE FROM productos WHERE COD = _COD; 
END;